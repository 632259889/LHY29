HLX Version 100
PixelShader<<<
#ifdef GL_ES
precision mediump float;
precision mediump int;
#endif

uniform float time;
uniform float duration;
uniform sampler2D hl_images[4];
uniform int object_id;
uniform vec2 hl_target_size;
varying vec2 hlf_texcoord;

vec3 brightness(vec3 color, float brightness) {
	float scaled = brightness / 2.0;
	if (scaled < 0.0) {
		return color * (1.0 + scaled);
	} else {
		return color + ((1.0 - color) * scaled);
	}
}

vec3 contrast(vec3 color, float contrast) {
	const float PI = 3.14159265;
	return min(vec3(1.0), ((color - 0.5) * (tan((contrast + 1.0) * PI / 4.0) ) + 0.5));
}

void main(){
	vec2 uv = hlf_texcoord;
	vec4 color = vec4(1, 1, 1, 1);
	vec3 color1;
	if (object_id == 0)
	{
		color = texture2D(hl_images[1], uv);
		
	}
	if (object_id >0)
	{
		color = texture2D(hl_images[0], uv);
	}
	color1=color.rgb;
	color1 = brightness(color1, 0.4724);
	color1 = contrast(color1, 0.3149);
	color1.g = color1.g * 0.87 + 0.13;
	color1.b = color1.b * 0.439 + 0.561;
	color1 *= vec3(0.981, 0.862, 0.686);
	gl_FragColor = vec4(color1,color.a);
}

>>>PixelShader